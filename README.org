** Install and use

*1. Download and install workflow*

#+begin_src sh
git clone https://github.com/thackl/detectEVE
cd detectEVE

# install with conda - I prefer mamba via https://github.com/conda-forge/miniforge
mamba create -n detectEVE
mamba activate detectEVE
mamba env update --file workflow/envs/env.yaml
#+end_src

*2. Setup databases*

#+begin_src sh
# download and cluster rvdb
# download uniref50 for retroblast
./detectEVE --setup-databases
#+end_src

*3. Analyse genomes*
#+begin_src sh
# from files
./detectEVE *.fasta

# from NCBI SRA WGS accessions
./detectEVE -a ACC [ACC ...]
#+end_src

- for *accessions*: The genome fasta files of all SRA WGS accessions will
  automatically be downloaded from NCBI to =genomes/<accession>.fna= (see
  https://www.ncbi.nlm.nih.gov/Traces/wgs/, for example, QMGA01 for the
  bottlenose dolphin).

*NOTE:* If you encounter an error related to
/tidyverse/stringi/libicui18n.so.58/, try reinstalling =stringi= locally

#+begin_src sh
mamba remove r-stringi r-tidyverse
R -e 'install.packages("stringi")'
mamba install r-tidyverse
#+end_src

To restart the workflow from where it failed, just run the same command again.

** Output
The pipeline produces the following final files in =results/=:
- =<genome_id>-validatEVEs.tsv= - best hit of the EVE with evidence and confidence
  annotation (exogenous virus: high, eve-ish description & hypothetical protein:
  low)
- =<genome_id>-validatEVEs.fna= - validatEVEs nucleotide sequences
- =<genome_id>-validatEVEs.pdf= - graphical overview of hit distribution for validatEVEs
[[file:detectEVE-output-example.png]]
** Workflow
[[file:detectEVE-workflow.png]]

** Changes (compared to legacy)
- rvdb80 (80% clustered with cd-hit; min-length 60aa) instead of
  VDB/VDB80.
  - Latest version automatically downloaded from source at
  Pasteur.
  - Annotated with NCBI-tax
  - filtering is done in diamond using --taxonlist / --taxon-exclude to control
    which viral groups to scan for

- EVE min_length: 83 amino-acids (250 bp in tblastn)

- =diamond blastx= instead of =tblastn=
  - =diamond= is used in frameshift mode to can extend hits across frameshifts;
  dropped merging of abutting =tblastn= hits from orig pipeline
  - =diamond= uses tantan
  mask, which gets rid of low-complexity region, such as Proline/Serine linkers
  Ig side chains
  - need to chop long contigs for diamond or else I lose hits (50k + 10k overlap
  windows). Creates possibility of redundant hits right at window edge (could be
  filtered?)

- retroblast with uniref50 + rvdb80 instead of NR
  - faster, less redundant, more viral hits
  - --top 20 (top hits within 20% top score, rather than strict -k 10 top hits)

** Questions & Notes
- lots of putatEVEs are low-complexity repeats - meaningful? 
  - [I'm now tantan masking VDB which gets rid of most of these low-complexity hits (Ig side chain
  stuff, PSSPSPSS linker, ...)]
  - I'm now using tantan masking in diamond which gets rid of most of these low-complexity hits

- currently I'm not filtering out retroviral hits - but we probably should?
  - can now be filtered in search via damond taxonlist/taxon-exclude, but might
    also filter retro hits after retroblast

- are validatEVEs just subset of putatEVEs or somehow extracted based on
  retroblast results? - YES

- CLI TODOs
  - [X] analysis
  - [X] setup
  - [X] document in README
  - [ ] test setup, custom DBs, ...

- [ ] conda/mamba for entire package (not just deps)
