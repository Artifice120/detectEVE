#!/usr/bin/env python3
"""detectEVE

Usage:
  detectEVE [-o OUT] [-c CORES] [-a ACC] [FASTA...]
  detectEVE setup


Commands
  setup                 download and prepare reference databases

Options:
  -a --accessions ACC   NCBI genome accessions to download and scan
  -o --out OUT          output directory [default: detectEVE-DATE]
  -c --cores CORES      cores [default: all]
  -s --snake ARGS       additional arguments to pass through to snakemake
  -h --help             Show this screen.
  --version             Show version.
"""

import os
import subprocess
import time
from docopt import docopt

opt = docopt(__doc__, version='detectEVE v0.8.0')
print(opt)

# establish snakemake workflow and out dir
out = os.path.abspath(opt["--out"])
out = out.replace("detectEVE-DATE", time.strftime("detectEVE-%Y%m%d-%H%M%S"))

# prep working dir and input
gd=os.path.join(out, "genomes/")
os.makedirs(gd, exist_ok=True)

with open(f'{out}/genomes.tsv', "w") as f:
    f.write("#accession\n")
    if opt["--accessions"]:
        f.writelines(opt["--accessions"])

if opt["FASTA"]:
    for fa in opt["FASTA"]:
        os.symlink(os.path.abspath(fa), os.path.join(gd, os.path.basename(fa)))

# start workflow
wf  = os.path.dirname(os.path.abspath(__file__))
subprocess.run('snakemake'
    f' --directory {out}'
    f' --cores {opt["--cores"]}'
    f' --config wf={wf}',
    shell=True, cwd=wf)
